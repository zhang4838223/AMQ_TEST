<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:bean="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:jdbc.properties</value>
            </list>
        </property>
    </bean>
    <!-- 数据源配置,使用应用内的DBCP数据库连接池  -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName"><value>${jdbc.driverClassName}</value></property>
        <property name="url"><value>${jdbc.url}</value></property>
        <property name="username"><value>${jdbc.username}</value></property>
        <property name="password"><value>${jdbc.password}</value></property>
        <property name="maxActive"><value>${jdbc.maxActive}</value></property>
        <property name="maxWait"><value>${jdbc.maxWait}</value></property>
        <property name="maxIdle"><value>${jdbc.maxIdle}</value></property>
        <property name="initialSize"><value>${jdbc.initSize}</value></property>
        <property name="removeAbandoned"><value>true</value></property>
        <property name="testWhileIdle"><value>true</value></property>
        <property name="testOnBorrow"><value>false</value></property>
        <property name="validationQuery"><value>SELECT 1 FROM SYS.DUAL</value></property>
        <property name="connectionProperties"><value>clientEncoding=UTF-8;serverEncoding=GBK;</value></property>
    </bean>

    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:sqlmap-config.xml"/>
        <!--<property name="mapperLocations">
            <value>classpath*:com/zxj/map/EmpMapper.xml</value>
        </property>-->
    </bean>

    <!--配置扫描Dao接口包，动态实现Dao接口，注入Spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.zxj.dao"/>
    </bean>

    <bean id="sqlSession"  class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!-- 整合jdbcTemplate，直接执行sql，方便批量sql操作和统计分析SQL -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="sqlDao" class="com.zxj.dao.SqlDao" >
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
    <!-- 连接事务的注解配置 -->
    <!--<bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean id="txInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="create*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>

            </props>
        </property>
    </bean>

    <bean id="empDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface"
                  value="com.zxj.dao.EmpMapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <!-- SpringBatch 配置start -->
    <!--<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">-->
        <!--<property name="jobRepository" ref="jobRepository"/>-->
    <!--</bean>-->

    <!--<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">-->
    <!--</bean>-->

    <!--<batch:job id="helloWorldJob">-->
        <!--<batch:step id="step_hello" next="step_world">-->
            <!--<tasklet ref="hello" transaction-manager="transactionManager"></tasklet>-->
        <!--</batch:step>-->
        <!--<batch:step id="step_world">-->
            <!--<tasklet ref="world" transaction-manager="transactionManager"></tasklet>-->
        <!--</batch:step>-->
    <!--</batch:job>-->

    <!--<bean id="hello" class="com.zxj.batch.WriteTasklet">-->
        <!--<property name="message" value="Hello "></property>-->
    <!--</bean>-->

    <!--<bean id="world" class="com.zxj.batch.WriteTasklet">-->
        <!--<property name="message" value=" World!"></property>-->
    <!--</bean>-->

</beans>